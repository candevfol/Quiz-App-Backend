generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id             String       @id @default(uuid())
    createdAt      DateTime     @default(now())
    username       String       @unique @db.VarChar(20)
    password       String       
    score           Int         @default(0)

    Authentication Authentication[]
}

model Authentication{
  userId String 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade )

  jwt String
  isValid Boolean

  @@id([userId, jwt])
}

model Quiz {
  id        Int         @id @default(autoincrement())
  title     String
  Questions Questions[]
}

model Questions {
  id      Int          @id @default(autoincrement())
  question String
  score   Int          @default(0)
  type    QuestionType

  quiz   Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId Int

  Option        Option[]
  CorrectOption CorrectOption[]
}

enum QuestionType {
  MCQ
  MSQ
  SUB
}

model Option {
  id            Int             @id @default(autoincrement())
  content       String
  question      Questions       @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId    Int
  CorrectOption CorrectOption[]
}

model CorrectOption {
  questionId Int
  question   Questions @relation(fields: [questionId], references: [id], onDelete: Cascade)

  ansId Int
  ans   Option @relation(fields: [ansId], references: [id], onDelete: Cascade)

  @@id([questionId, ansId])
}
